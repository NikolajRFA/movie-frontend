Index: src/App.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.App {\r\n    text-align: center;\r\n}\r\n\r\n.App-logo {\r\n    height: 40vmin;\r\n    pointer-events: none;\r\n}\r\n\r\n@media (prefers-reduced-motion: no-preference) {\r\n    .App-logo {\r\n        animation: App-logo-spin infinite 20s linear;\r\n    }\r\n}\r\n\r\n.App-header {\r\n    background-color: #282c34;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: calc(10px + 2vmin);\r\n    color: white;\r\n}\r\n\r\n.App-link {\r\n    color: #61dafb;\r\n}\r\n\r\n.sidebar {\r\n    position: fixed;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 15vw;\r\n    overflow-x: hidden;\r\n    padding-top: 20px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    background-color: #212529;\r\n}\r\n\r\n.menuItem {\r\n    background-color: #ffe920;\r\n    padding: 20px;\r\n    border-radius: 25px;\r\n    text-decoration: none; /* Remove underlining */\r\n    color: #212529; /* Set the desired text color */\r\n    cursor: pointer; /* Add pointer cursor for better UX */\r\n}\r\n\r\n.active {\r\n    font-weight: bold;\r\n}\r\n\r\n.menuItem:hover {\r\n    font-weight: bold; /* Make the text bold on hover */\r\n}\r\n\r\n@keyframes App-logo-spin {\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.css b/src/App.css
--- a/src/App.css	(revision 4e774f9721a727d9d6735feb4fcd780a229ca20b)
+++ b/src/App.css	(date 1700824694722)
@@ -57,6 +57,36 @@
     font-weight: bold; /* Make the text bold on hover */
 }
 
+.loadingStyle {
+    position: fixed;
+    bottom: 10px;
+    right: 10px;
+    background-color: rgba(255, 255, 255, 0.8);
+    padding: 10px;
+    border-radius: 5px;
+}
+
+.errorStyle {
+    position: fixed;
+    bottom: 10px;
+    right: 10px;
+    background-color: rgba(255, 0, 0, 0.8);
+    color: #fff;
+    padding: 10px;
+    border-radius: 5px;
+}
+
+.noTitlesStyle {
+    position: fixed;
+    bottom: 10px;
+    right: 10px;
+    background-color: rgba(0, 0, 0, 0.8);
+    color: #fff;
+    padding: 10px;
+    border-radius: 5px;
+}
+
+
 @keyframes App-logo-spin {
     from {
         transform: rotate(0deg);
Index: src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavBar from \"./NavBar\";\r\nimport TitleIdCard from \"./TitleCard\";\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport DropdownTest from \"./DropdownTest\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport TitleCard from \"./TitleCard\";\r\n\r\nfunction App() {\r\n    const [titles, setTitles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5011/api/titles?page=0&pageSize=10`)\r\n            .then(res => {\r\n                setTitles(res.data.items);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                setError(error);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {loading && <p>Loading...</p>}\r\n            {error && <p>Error: {error.message}</p>}\r\n            {!loading && !error && titles.length === 0 && <p>No titles available.</p>}\r\n            {!loading && !error && titles.length > 0 &&\r\n                titles.map(title => <TitleCard key={title.url} title={title} />)\r\n            }\r\n            <Sidebar/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.js b/src/App.js
--- a/src/App.js	(revision 4e774f9721a727d9d6735feb4fcd780a229ca20b)
+++ b/src/App.js	(date 1701244492601)
@@ -1,14 +1,12 @@
 import './App.css';
 import 'bootstrap/dist/css/bootstrap.min.css';
 import NavBar from "./NavBar";
-import TitleIdCard from "./TitleCard";
-import {Dropdown} from "react-bootstrap";
-import DropdownTest from "./DropdownTest";
 import Sidebar from "./Sidebar";
 
 import { useEffect, useState } from "react";
 import axios from "axios";
 import TitleCard from "./TitleCard";
+import TitlesForFrontpage from "./TitlesForFrontpage";
 
 function App() {
     const [titles, setTitles] = useState([]);
@@ -29,14 +27,8 @@
 
     return (
         <div>
-            <NavBar />
-            {loading && <p>Loading...</p>}
-            {error && <p>Error: {error.message}</p>}
-            {!loading && !error && titles.length === 0 && <p>No titles available.</p>}
-            {!loading && !error && titles.length > 0 &&
-                titles.map(title => <TitleCard key={title.url} title={title} />)
-            }
-            <Sidebar/>
+            <NavBar titles={titles}/>
+            <TitlesForFrontpage titles={titles} loading={loading} error={error}/>
         </div>
     );
 }
Index: src/NavBar.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport DropdownTest from \"./DropdownTest\";\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport TitleCard from \"./TitleCard\";\r\n\r\nfunction NavBar() {\r\n    const [searchPhrase, setSearchPhrase] = useState('');\r\n    const [showDropdown, setShowDropdown] = useState(false);\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            if (inputRef.current) {\r\n                const inputWidth = inputRef.current.offsetWidth;\r\n                const dropdownMenu = document.getElementById('searchDropdownMenu');\r\n                if (dropdownMenu) {\r\n                    // Ensure the dropdown has the same width as the search bar.\r\n                    dropdownMenu.style.minWidth = `${inputWidth}px`;\r\n                    dropdownMenu.style.maxWidth = `${inputWidth}px`;\r\n                }\r\n            }\r\n        }\r\n\r\n        handleResize(); // Initial calculation on mount\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, [searchPhrase, showDropdown]);\r\n\r\n    function handleSearchChange(event) {\r\n        setSearchPhrase(event.target.value);\r\n        setShowDropdown(true);\r\n    }\r\n\r\n    function handleSearchFocus() {\r\n        setShowDropdown(true);\r\n    }\r\n\r\n    function handleSearchBlur(event) {\r\n        const dropdownMenu = document.getElementById('searchDropdownMenu');\r\n\r\n        if (dropdownMenu && dropdownMenu.contains(event.relatedTarget)) {\r\n            // If focus is moving to the dropdown or its children, don't close the dropdown immediately\r\n            return;\r\n        }\r\n\r\n        setShowDropdown(false);\r\n    }\r\n\r\n    return (\r\n        <Navbar expand=\"lg\" className=\"bg-dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand href=\"#home\" style={{width: '80px'}}>Veagt Bøøtstrap</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mx-left\">\r\n                    </Nav>\r\n                    <Nav className=\"mx-auto w-100 justify-content-center\">\r\n                        <Form className=\"w-75\">\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Search\"\r\n                                onChange={handleSearchChange}\r\n                                onFocus={handleSearchFocus}\r\n                                //onClick={handleSearchFocus}\r\n                                onBlur={handleSearchBlur}\r\n                                ref={inputRef}\r\n                            />\r\n                            {showDropdown && (\r\n                                <div style={{\r\n                                    marginTop: '-12px',\r\n                                    position: 'absolute',\r\n                                    top: 'calc(100% + 10px)',\r\n                                    zIndex: 1000,\r\n                                }}\r\n                                onBlur={handleSearchBlur}>\r\n                                    <Dropdown.Menu id=\"searchDropdownMenu\" show>\r\n                                        <Dropdown.Item href=\"#/action-1\">\r\n                                            {searchPhrase}\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item href=\"https://dr.dk\"> <TitleCard/> </Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                </div>\r\n                            )}\r\n                        </Form>\r\n                    </Nav>\r\n                    <Nav className=\"mx-right\" style={{width: '80px'}}>\r\n                        <Nav.Link href=\"#link\">Login</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n        ;\r\n}\r\n\r\nexport default NavBar;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/NavBar.jsx b/src/NavBar.jsx
--- a/src/NavBar.jsx	(revision 4e774f9721a727d9d6735feb4fcd780a229ca20b)
+++ b/src/NavBar.jsx	(date 1700826132293)
@@ -3,12 +3,12 @@
 import Navbar from 'react-bootstrap/Navbar';
 import NavDropdown from 'react-bootstrap/NavDropdown';
 import Form from "react-bootstrap/Form";
-import {useEffect, useRef, useState} from "react";
+import React, {useEffect, useRef, useState} from "react";
 import DropdownTest from "./DropdownTest";
 import {Dropdown} from "react-bootstrap";
 import TitleCard from "./TitleCard";
 
-function NavBar() {
+function NavBar({titles}) {
     const [searchPhrase, setSearchPhrase] = useState('');
     const [showDropdown, setShowDropdown] = useState(false);
     const inputRef = useRef(null);
@@ -86,7 +86,9 @@
                                         <Dropdown.Item href="#/action-1">
                                             {searchPhrase}
                                         </Dropdown.Item>
-                                        <Dropdown.Item href="https://dr.dk"> <TitleCard/> </Dropdown.Item>
+                                        <Dropdown.Item >
+                                            {titles.map(title => <TitleCard key={title.url} title={title} />)}
+                                        </Dropdown.Item>
                                         <Dropdown.Item href="#/action-2">Another action</Dropdown.Item>
                                         <Dropdown.Item href="#/action-3">Something else</Dropdown.Item>
                                     </Dropdown.Menu>
Index: src/TitlesForFrontpage.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/TitlesForFrontpage.jsx b/src/TitlesForFrontpage.jsx
new file mode 100644
--- /dev/null	(date 1700825589786)
+++ b/src/TitlesForFrontpage.jsx	(date 1700825589786)
@@ -0,0 +1,18 @@
+import React from 'react';
+import TitleCard from './TitleCard';
+import './App.css'; // Import your CSS file
+
+function TitlesForFrontpage({ loading, error, titles }) {
+    return (
+        <div>
+            {loading && <p className="loadingStyle">Loading...</p>}
+            {error && <p className="errorStyle">Error: {error.message}</p>}
+            {!loading && !error && titles.length === 0 && <p className="noTitlesStyle">No titles available.</p>}
+            {!loading && !error && titles.length > 0 &&
+                titles.map(title => <TitleCard key={title.url} title={title} />)
+            }
+        </div>
+    );
+}
+
+export default TitlesForFrontpage;
